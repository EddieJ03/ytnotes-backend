apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-statefulset
  labels:
    app: mongo
spec:
  serviceName: "mongo-service"
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-user
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-password
        volumeMounts:
        - name: mongo-data # must match name ins volumeClaimTemplates
          mountPath: /data/db
  
  # volume is unique per pod, but since this is defined as a StatefulSet, data will be synced under the hood by Kubernetes
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi  # Adjust size as needed

--- # 3 dash separator to indicate yaml file separation

apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  # This makes the service headless, which is suited for StatefulSets (stable DNS and direct access from other pods). 
  # It abstracts away the complexity of other pods needing to directly access the database
  # (unlike clusterIP which hides set behind a single virtual IP)
  clusterIP: None  
  selector:
    app: mongo
